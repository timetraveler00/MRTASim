// Block definition (there may be more than one block per file)
FUNCTION_BLOCK tipper

// Define input variables
VAR_INPUT
    TaskCount : REAL;
    CurrentPath : REAL;
	Inclusion :REAL; 
	Price : REAL; 
END_VAR

// Define output variable
VAR_OUTPUT
    bidvalue : REAL;
END_VAR

// Fuzzify input variable 'service'
FUZZIFY TaskCount
    TERM few := (0, 1) (3, 1) (6, 0); 
    TERM medium := (3, 0) (6, 1) (9, 0);
    TERM high := (6, 0) (9, 1);
END_FUZZIFY

// Fuzzify input variable 'path'
FUZZIFY CurrentPath 
    TERM short := (0, 1) (200, 1) (400,0) ;
    TERM medium := (200,0) (400,1) (600, 1)(800, 0);
    TERM long := (600, 0) (800, 1)(1100, 1) (1400, 0); 
    TERM extreme := (1100, 0)(1400,1); 
END_FUZZIFY

// Fuzzify input variable Inclusion
FUZZIFY Inclusion 
    TERM short := (0, 1) (50, 1) (100,0) ;
    TERM medium := (50,0) (100,1) (200, 1)(250, 0);
    TERM long := (200, 0) (250, 1)(300, 1) (350, 0); 
    TERM extreme := (300, 0)(350,1); 
END_FUZZIFY

// Fuzzify input variable price
FUZZIFY Price 
    TERM low := (0, 1) (50, 1) (100,0) ;
    TERM medium := (50,0) (100,1) (200, 1)(250, 0);
    TERM high := (200, 0) (250, 1)(300, 1) (350, 0); 
    TERM extreme := (300, 0)(350,1); 
END_FUZZIFY

// Defzzzify output variable 'tip'
DEFUZZIFY bidvalue
    TERM low := (0,0) (50,1) (100,0);
    TERM average := (100,0) (150,1) (200,0);
    TERM high := (200,0) (250,1) (300,0);
    TERM extreme := (300,0) (350,1) (400,0);
    // Use 'Center Of Gravity' defuzzification method
    METHOD : COG;
    // Default value is 0 (if no rule activates defuzzifier)
    DEFAULT := 0;
END_DEFUZZIFY

RULEBLOCK No1
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;

    RULE 1 : IF TaskCount IS high AND CurrentPath IS extreme 
                THEN bidvalue IS extreme;
    RULE 2 : IF TaskCount IS few AND CurrentPath IS short
                THEN bidvalue IS low;
    RULE 3 : IF Inclusion IS short THEN bidvalue IS low;

END_RULEBLOCK

END_FUNCTION_BLOCK